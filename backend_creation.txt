At first in package.json file add or change this 
    "scripts": {
    "dev": "nodemon src/server.js"
  },
  type as module 
  "type": "module",

1: created server.js:
    intialized PORT
    added express and dotenv configs  // main express 
    and used app.use("/api/auth/", authRoutes)

2: created db.js in lib:
    in this we import mongoose and make connections usign MONGO_URI importing from .env file
    from this we console.log elements 

3: created authroute.js in routes:
    used router.post for method 
    for each signup, signin, logout
    and importing from auth.controlers.js from controllers

4: created User.js in models:
    we use bcrypt for password hashing
    in this we used userSchema for signin and onboarding from and this info will be saved in database in mongodb
    and we structured required with type, default, etc..
    for **friends** we created an array ie: for users we assign a numbers soo. when we add them to our friends then the friends array will be filled with their numbers

    and we used password hashing by using bcrypt using try and catch error handling



5: created auth.controller.js in controllers:
    in this we imported jwt for tokens from mongo
    in this we used for valid configurations for sigin with try and catch

    ** To generate a jwt token we run command in bash : openssl rand -base64 32
    paste in .env as JWT_SECRET_KEY 


6: .env in this we create PORT, and link MONGO_URI, STEAM_API_KEY and _SECRET  #important file

7. stream.js file in lib :
    used for creating the user in the getstream platform too... with valid token


8. User.controller in controller: 
    this file contains the logic for user-related operations
    such as getting recommended users, getting friends, and sending friend requests

9. chat.controller in controller:
    this file contains the logic for user-related operations

10. user.route in Routes:
    This file defines the routes for user-related operations
11. chat.route in Routes:
    This file defines the routes for chat-related operations


Apps- used: 
#Github
https://avatar-placeholder.iran.liara.run/ -(Avatar.placeholer.com) --> for at random Avatar
https://getstream.io/ -(getstream) --> for video chats and chatting
postman ---> To check and to run the User Signup and details
mongodb ---> To store the user Data in the database 




** Note**
First run the backend and then use postman and mongodb for testing

